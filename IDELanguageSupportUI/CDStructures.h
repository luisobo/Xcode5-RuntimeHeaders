/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#pragma mark Named Structures

struct BreakpointLocation;

struct Broadcaster;

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct Debugger;

struct ExecutionContextRef;

struct Process;

struct SBBreakpointLocation {
    struct shared_ptr<lldb_private::BreakpointLocation> _field1;
};

struct SBBroadcaster {
    struct shared_ptr<lldb_private::Broadcaster> m_opaque_sp;
    struct Broadcaster *m_opaque_ptr;
};

struct SBDebugger {
    struct shared_ptr<lldb_private::Debugger> m_opaque_sp;
};

struct SBProcess {
    struct weak_ptr<lldb_private::Process> m_opaque_wp;
};

struct SBTarget {
    struct shared_ptr<lldb_private::Target> m_opaque_sp;
};

struct SBThread {
    struct shared_ptr<lldb_private::ExecutionContextRef> m_opaque_sp;
};

struct SwiftSyntaxStructure {
    unsigned int _field1;
    struct _NSRange _field2;
    struct _NSRange _field3;
    struct _NSRange _field4;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field5;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field6;
    vector_056a6866 _field7;
};

struct Target;

struct _DVTGraphBounds {
    double minX;
    double maxX;
    double minY;
    double maxY;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct __shared_weak_count;

struct _opaque_pthread_t {
    long long _field1;
    struct __darwin_pthread_handler_rec *_field2;
    char _field3[8176];
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long _field1;
                    unsigned long long _field2;
                    char *_field3;
                } _field1;
                struct __short {
                    union {
                        unsigned char _field1;
                        char _field2;
                    } _field1;
                    char _field2[23];
                } _field2;
                struct __raw {
                    unsigned long long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
};

struct shared_ptr<lldb_private::BreakpointLocation> {
    struct BreakpointLocation *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<lldb_private::Broadcaster> {
    struct Broadcaster *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<lldb_private::Debugger> {
    struct Debugger *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<lldb_private::ExecutionContextRef> {
    struct ExecutionContextRef *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<lldb_private::Target> {
    struct Target *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct vector<SwiftSyntaxStructure, std::__1::allocator<SwiftSyntaxStructure>> {
    struct SwiftSyntaxStructure *__begin_;
    struct SwiftSyntaxStructure *__end_;
    struct __compressed_pair<SwiftSyntaxStructure *, std::__1::allocator<SwiftSyntaxStructure>> {
        struct SwiftSyntaxStructure *__first_;
    } __end_cap_;
};

struct vector<SwiftSyntaxToken, std::__1::allocator<SwiftSyntaxToken>>;

struct vector<std::__1::vector<SwiftSyntaxToken, std::__1::allocator<SwiftSyntaxToken>>, std::__1::allocator<std::__1::vector<SwiftSyntaxToken, std::__1::allocator<SwiftSyntaxToken>>>> {
    struct vector<SwiftSyntaxToken, std::__1::allocator<SwiftSyntaxToken>> *__begin_;
    struct vector<SwiftSyntaxToken, std::__1::allocator<SwiftSyntaxToken>> *__end_;
    struct __compressed_pair<std::__1::vector<SwiftSyntaxToken, std::__1::allocator<SwiftSyntaxToken>>*, std::__1::allocator<std::__1::vector<SwiftSyntaxToken, std::__1::allocator<SwiftSyntaxToken>>>> {
        struct vector<SwiftSyntaxToken, std::__1::allocator<SwiftSyntaxToken>> *__first_;
    } __end_cap_;
};

struct weak_ptr<lldb_private::Process> {
    struct Process *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned long long data[3];
} CDStruct_3b0d17db;

// Ambiguous groups
typedef struct {
    unsigned int didSelectNewResultDisplayDate:1;
} CDStruct_b590ebd7;

typedef struct vector<SwiftSyntaxStructure, std::__1::allocator<SwiftSyntaxStructure>> {
    struct SwiftSyntaxStructure *__begin_;
    struct SwiftSyntaxStructure *__end_;
    struct __compressed_pair<SwiftSyntaxStructure *, std::__1::allocator<SwiftSyntaxStructure>> {
        struct SwiftSyntaxStructure *__first_;
    } __end_cap_;
} vector_056a6866;

