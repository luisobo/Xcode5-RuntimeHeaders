/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import <IDEiOSSupportCore/DVTAbstractiOSDevice.h>

#import "DTiPhoneSimulatorSessionDelegate-Protocol.h"
#import "DVTDeviceApplicationProvider-Protocol.h"
#import "IDERunDestinationFallbackSelectorGroupingFamily-Protocol.h"
#import "NSFileManagerDelegate-Protocol.h"
#import "XCDTMobileIS_XPCDebuggingProcotol-Protocol.h"

@class DTXChannel, DTiPhoneSimulatorSession, DTiPhoneSimulatorSystemRoot, DVTConfinementService, IDELaunchiPhoneSimulatorLauncher, IDEPseudoTerminal, NSArray, NSError, NSMutableDictionary, NSNumber, NSSet, NSString, SimDevice, SimDeviceType;

@interface DVTiPhoneSimulator : DVTAbstractiOSDevice <NSFileManagerDelegate, IDERunDestinationFallbackSelectorGroupingFamily, DTiPhoneSimulatorSessionDelegate, DVTDeviceApplicationProvider, XCDTMobileIS_XPCDebuggingProcotol>
{
    id <DVTCancellable> _notificationToken;
    _Bool _launchSucceeded;
    NSError *_launchFailureError;
    _Bool _didExitRecursionGuard;
    IDEPseudoTerminal *_pty;
    NSString *_displayOrder;
    DVTConfinementService *_confinementService;
    NSString *_confinementServiceControlPath;
    NSString *_testUserName;
    NSString *_testUserPath;
    NSString *_recordedFramesBacktraceRecordingDylibPath;
    NSMutableDictionary *_waiters;
    _Bool _correspondingDeviceSDKExists;
    IDELaunchiPhoneSimulatorLauncher *_launchService;
    SimDevice *_device;
    DTiPhoneSimulatorSession *_currentSimulatorSession;
    DTXChannel *_xpcAttachServiceChannel;
}

+ (BOOL)_hasExistingSession:(id)arg1;
+ (id)simulatorWithDevice:(id)arg1;
+ (void)initialize;
@property(retain) DTXChannel *xpcAttachServiceChannel; // @synthesize xpcAttachServiceChannel=_xpcAttachServiceChannel;
@property(readonly) DTiPhoneSimulatorSession *currentSimulatorSession; // @synthesize currentSimulatorSession=_currentSimulatorSession;
@property(retain) SimDevice *device; // @synthesize device=_device;
@property _Bool correspondingDeviceSDKExists; // @synthesize correspondingDeviceSDKExists=_correspondingDeviceSDKExists;
@property(retain) IDELaunchiPhoneSimulatorLauncher *launchService; // @synthesize launchService=_launchService;
- (void).cxx_destruct;
- (id)runExecutableAtPath:(id)arg1 withArguments:(id)arg2 environment:(id)arg3 options:(id)arg4 terminationHandler:(id)arg5;
- (BOOL)canRunExecutables;
- (void)stopDebuggingXPCServicesForPID:(int)arg1;
- (void)xpcServiceObserved:(id)arg1 withProcessIdentifier:(int)arg2 requestedByProcess:(int)arg3 options:(id)arg4;
- (void)debugXPCServices:(id)arg1;
- (BOOL)supportsXPCServiceDebugging;
- (id)primaryInstrumentsServer;
- (BOOL)stopDebugServerForLaunchSession:(id)arg1 error:(id *)arg2;
- (BOOL)startDebugServerForLaunchSession:(id)arg1 withPseudoTerminal:(id)arg2 error:(id *)arg3;
- (BOOL)installApplicationWithLaunchSession:(id)arg1 error:(id *)arg2;
- (id)makeTransportForTestManagerService;
- (id)_waitForSimLaunchdToLoadENVAndReturnTestConnectionSocketPath;
- (BOOL)requiresTestDaemonMediationForTestHostConnection;
- (BOOL)supportsTestManagerDaemon;
- (void)startConfinementServiceIfNeeded;
- (id)_testUserPathForWorkspaceArena:(id)arg1;
- (BOOL)validateDeviceSpecifierOptions:(id)arg1 allowMultipleMatches:(BOOL)arg2 error:(id *)arg3;
- (id)testArchitectureForBuildableProduct:(id)arg1 withBuildParameters:(id)arg2;
- (id)_availableArchitecturesForArchitecture:(id)arg1;
- (id)deviceForRunningUnitTestsWithHost:(id)arg1 error:(id *)arg2;
- (BOOL)testingShouldAttachDebuggerWithHost:(id)arg1;
- (void)modifyTestingEnvironmentVariables:(id)arg1 host:(id)arg2 testBundlePath:(id)arg3;
- (id)testingFrameworkPathsForBuildableProduct:(id)arg1 withBuildParameters:(id)arg2;
- (id)testHostPathForBuildableProduct:(id)arg1 buildParameters:(id)arg2 outError:(id *)arg3;
- (BOOL)supportsFileSpecifyingTestScopes;
- (BOOL)supportsInverseTestScopes;
- (BOOL)supportsMultipleTestScopes;
- (id)taskForDeviceCommand:(id)arg1 withArguments:(id)arg2 error:(id *)arg3;
- (id)systemBasePath;
- (void)stopLocationSimulation;
- (void)simulateLocationWithLatitude:(id)arg1 longitude:(id)arg2;
@property(readonly, copy) NSString *description;
- (void)_cleanupSession;
- (void)session:(id)arg1 didEndWithError:(id)arg2;
- (void)session:(id)arg1 didStart:(BOOL)arg2 withError:(id)arg3;
- (void)_waitForReplyWithKey:(id)arg1;
- (BOOL)attachedToTarget:(id)arg1 error:(id *)arg2;
- (BOOL)launchTool:(id)arg1 environment:(id)arg2 pty:(id)arg3 pid:(int *)arg4 error:(id *)arg5;
- (BOOL)launchSimulatedExecutable:(id)arg1 error:(id *)arg2;
- (id)_createNewSessionConfig:(id)arg1 validBundledAppPath:(id *)arg2 error:(id *)arg3;
- (void)transferDirectionsFileToBundlePath:(id)arg1;
- (void)uploadApplicationDataToBundlePath:(id)arg1;
- (void)presentErrorWithMessageText:(id)arg1 informativeText:(id)arg2;
- (id)simulatorDirectoriesForAppName:(id)arg1;
- (id)effectiveSDKVersion;
- (BOOL)fileManager:(id)arg1 shouldCopyItemAtPath:(id)arg2 toPath:(id)arg3;
- (BOOL)shouldProcessPath:(id)arg1;
- (BOOL)prepareToLaunchWithService:(id)arg1 error:(id *)arg2;
- (unsigned long long)_sessionStartTimeout;
@property(readonly) NSSet *systemApplications;
@property(readonly) NSSet *applications;
- (id)preferredSDKForDeviceOptions:(id)arg1 error:(id *)arg2;
- (id)preferredArchitectureForDeviceOptions:(id)arg1 error:(id *)arg2;
- (id)deviceSpecificOverridingPropertiesForBuildable:(id)arg1 withBaselineParameters:(id)arg2;
- (id)executionDisplayName;
- (id)supportedSDKsForBuildable:(id)arg1 buildParameters:(id)arg2 error:(id *)arg3;
- (BOOL)supportsRunningExecutableAtPath:(id)arg1 usingArchitecture:(id)arg2 error:(id *)arg3;
- (BOOL)supportsExecutionForArchitecture:(id)arg1 launchSession:(id)arg2 error:(id *)arg3;
- (BOOL)shouldPresentDeviceForBuildable:(id)arg1 buildParameters:(id)arg2 error:(id *)arg3;
- (id)supportedArchitecturesForBuildable:(id)arg1 buildParameters:(id)arg2 error:(id *)arg3;
- (BOOL)canBeDefaultDeviceForBuildable:(id)arg1 buildParameters:(id)arg2;
- (id)softwareVersion;
- (void)setDisplayOrder:(id)arg1;
- (id)displayOrder;
- (void)hasBeenDetached;
- (void)terminate;
- (void)willTerminate;
@property(readonly, copy) NSArray *supportedDeviceFamilies;
- (id)deviceType;
- (id)platform;
- (BOOL)isAvailable;
- (id)nativeArchitecture;
- (id)operatingSystemVersionWithBuildNumber;
- (id)operatingSystemVersion;
- (void)renameDevice:(id)arg1;
- (void)setName:(id)arg1;
- (id)name;
- (BOOL)canIgnore;
- (BOOL)canRename;
- (id)modelCode;
@property(readonly, nonatomic) NSString *ide_fallbackSelectionDeviceGroupingFamily;
- (id)modelUTI;
- (id)modelName;
- (BOOL)supportsPGOReturningError:(id *)arg1;
- (BOOL)supportsDisplayScaleOption;
- (BOOL)supportsRoutingCoverageFile;
- (void)performUbiquityFetchEvent;
- (BOOL)canPerformUbiquityFetchEvent;
- (void)performFetchEventForPID:(int)arg1;
- (id)recordedFramesBacktraceRecordingDylibPath;
- (id)recordedFramesLibdispatchIntrospectionDylibPath;
- (unsigned long long)supportsFetchEvents;
- (BOOL)supportsLocationSimulation;
- (BOOL)supportsApplicationDataUploading;
@property(readonly) DTiPhoneSimulatorSystemRoot *simulatedSystemRoot;
- (id)launchApplicationWithBundleIdentifier:(id)arg1 andOptions:(id)arg2;
- (id)launchApplicationWithBundleIdentifier:(id)arg1;
- (id)spawnExecutableAtPath:(id)arg1 withOptions:(id)arg2 andTerminationHandler:(id)arg3;
- (id)spawnExecutableAtPath:(id)arg1 withOptions:(id)arg2;
- (id)uninstallApplicationWithBundleIdentifier:(id)arg1 andOptions:(id)arg2;
- (id)uninstallApplicationWithBundleIdentifier:(id)arg1;
- (id)installApplicationAtPath:(id)arg1 withOptions:(id)arg2;
- (id)installApplicationAtPath:(id)arg1;
- (id)restoreContentsAndSettingsFrom:(id)arg1;
- (id)eraseContentsAndSettings;
- (id)shutdown;
- (id)bootWithOptions:(id)arg1;
- (id)boot;
@property(readonly) unsigned long long state;
@property(readonly) SimDeviceType *deviceInfo;
- (id)shutDownDevice;
- (id)startUpDevice;
- (unsigned long long)startupState;
- (BOOL)canStartUpAndShutDown;
- (void)dealloc;
@property(readonly) NSNumber *simulatedDeviceFamily;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

