/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#pragma mark Named Structures

struct C3DColor4 {
    union {
        float rgba[4];
        struct {
            float r;
            float g;
            float b;
            float a;
        } ;
    } ;
};

struct CATransform3D {
    double m11;
    double m12;
    double m13;
    double m14;
    double m21;
    double m22;
    double m23;
    double m24;
    double m31;
    double m32;
    double m33;
    double m34;
    double m41;
    double m42;
    double m43;
    double m44;
};

struct CGPath;

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CVSMPTETime {
    short _field1;
    short _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    short _field6;
    short _field7;
    short _field8;
    short _field9;
};

struct InplaceSolverIslandCallback;

struct NSBezierPath {
    Class _field1;
    long long _field2;
    long long _field3;
    struct PATHSEGMENT *_field4;
    long long _field5;
    void *_field6;
    double _field7;
    struct CGRect _field8;
    double _field9;
    double _field10;
    double *_field11;
    unsigned long long _field12;
    double _field13;
    void *_field14;
    long long _field15;
    long long _field16;
    struct {
        unsigned int :8;
        unsigned int :2;
        unsigned int :22;
    } _field17;
};

struct NSImage {
    Class _field1;
    id _field2;
    struct CGSize _field3;
    struct __imageFlags {
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :2;
        unsigned int :3;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :8;
    } _field4;
    id _field5;
    id _field6;
};

struct NSOpenGLContext {
    Class _field1;
    id _field2;
    struct _CGLContextObject *_field3;
};

struct PATHSEGMENT;

struct SCNCAction {
    void **_field1;
    float _field2;
    id _field3;
    _Bool _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    _Bool _field10;
    _Bool _field11;
    id _field12;
    void _field13;
    struct __CFString *_field14;
    long long _field15;
    double _field16;
    double _field17;
    double _field18;
    double _field19;
};

struct SCNCActionCustom {
    void **_field1;
    float _field2;
    id _field3;
    _Bool _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    _Bool _field10;
    _Bool _field11;
    id _field12;
    void _field13;
    struct __CFString *_field14;
    long long _field15;
    double _field16;
    double _field17;
    double _field18;
    double _field19;
    id _field20;
    void _field21;
};

struct SCNCActionFade {
    void **_field1;
    float _field2;
    id _field3;
    _Bool _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    _Bool _field10;
    _Bool _field11;
    id _field12;
    void _field13;
    struct __CFString *_field14;
    long long _field15;
    double _field16;
    double _field17;
    double _field18;
    double _field19;
    float _field20;
    float _field21;
    float _field22;
    char _field23;
};

struct SCNCActionGroup {
    void **_field1;
    float _field2;
    id _field3;
    _Bool _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    _Bool _field10;
    _Bool _field11;
    id _field12;
    void _field13;
    struct __CFString *_field14;
    long long _field15;
    double _field16;
    double _field17;
    double _field18;
    double _field19;
    struct list<SCNCAction *, std::__1::allocator<SCNCAction *>> _field20;
};

struct SCNCActionMove {
    void **_field1;
    float _field2;
    id _field3;
    _Bool _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    _Bool _field10;
    _Bool _field11;
    id _field12;
    void _field13;
    struct __CFString *_field14;
    long long _field15;
    double _field16;
    double _field17;
    double _field18;
    double _field19;
    double _field20;
    char _field21;
    char _field22;
};

struct SCNCActionRepeat {
    void **_field1;
    float _field2;
    id _field3;
    _Bool _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    _Bool _field10;
    _Bool _field11;
    id _field12;
    void _field13;
    struct __CFString *_field14;
    long long _field15;
    double _field16;
    double _field17;
    double _field18;
    double _field19;
    struct SCNCAction *_field20;
    unsigned long long _field21;
    unsigned long long _field22;
    char _field23;
};

struct SCNCActionRotate {
    void **_field1;
    float _field2;
    id _field3;
    _Bool _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    _Bool _field10;
    _Bool _field11;
    id _field12;
    void _field13;
    struct __CFString *_field14;
    long long _field15;
    double _field16;
    double _field17;
    double _field18;
    double _field19;
    struct __C3DQuaternion _field20;
    struct __C3DQuaternion _field21;
    char _field22;
    char _field23;
    char _field24;
    char _field25;
};

struct SCNCActionScale {
    void **_field1;
    float _field2;
    id _field3;
    _Bool _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    _Bool _field10;
    _Bool _field11;
    id _field12;
    void _field13;
    struct __CFString *_field14;
    long long _field15;
    double _field16;
    double _field17;
    double _field18;
    double _field19;
    float _field20;
    float _field21;
    float _field22;
    float _field23;
    float _field24;
    char _field25;
    char _field26;
};

struct SCNCActionSequence {
    void **_field1;
    float _field2;
    id _field3;
    _Bool _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    _Bool _field10;
    _Bool _field11;
    id _field12;
    void _field13;
    struct __CFString *_field14;
    long long _field15;
    double _field16;
    double _field17;
    double _field18;
    double _field19;
    struct vector<SCNCAction *, std::__1::allocator<SCNCAction *>> _field20;
    unsigned long long _field21;
};

struct SCNCActionWait {
    void **_field1;
    float _field2;
    id _field3;
    _Bool _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    _Bool _field10;
    _Bool _field11;
    id _field12;
    void _field13;
    struct __CFString *_field14;
    long long _field15;
    double _field16;
    double _field17;
    double _field18;
    double _field19;
};

struct SCNVector3 {
    double x;
    double y;
    double z;
};

struct SCNVector4 {
    double x;
    double y;
    double z;
    double w;
};

struct _C3DAnimationPendingEvent;

struct _CGLContextObject {
    struct __GLIContextRec *_field1;
    struct __GLIFunctionDispatchRec {
        void *_field1;
        void *_field2;
        void *_field3;
        void *_field4;
        void *_field5;
        void *_field6;
        void *_field7;
        void *_field8;
        void *_field9;
        void *_field10;
        void *_field11;
        void *_field12;
        void *_field13;
        void *_field14;
        void *_field15;
        void *_field16;
        void *_field17;
        void *_field18;
        void *_field19;
        void *_field20;
        void *_field21;
        void *_field22;
        void *_field23;
        void *_field24;
        void *_field25;
        void *_field26;
        void *_field27;
        void *_field28;
        void *_field29;
        void *_field30;
        void *_field31;
        void *_field32;
        void *_field33;
        void *_field34;
        void *_field35;
        void *_field36;
        void *_field37;
        void *_field38;
        void *_field39;
        void *_field40;
        void *_field41;
        void *_field42;
        void *_field43;
        void *_field44;
        void *_field45;
        void *_field46;
        void *_field47;
        void *_field48;
        void *_field49;
        void *_field50;
        void *_field51;
        void *_field52;
        void *_field53;
        void *_field54;
        void *_field55;
        void *_field56;
        void *_field57;
        void *_field58;
        void *_field59;
        void *_field60;
        void *_field61;
        void *_field62;
        void *_field63;
        void *_field64;
        void *_field65;
        void *_field66;
        void *_field67;
        void *_field68;
        void *_field69;
        void *_field70;
        void *_field71;
        void *_field72;
        void *_field73;
        void *_field74;
        void *_field75;
        void *_field76;
        void *_field77;
        void *_field78;
        void *_field79;
        void *_field80;
        void *_field81;
        void *_field82;
        void *_field83;
        void *_field84;
        void *_field85;
        void *_field86;
        void *_field87;
        void *_field88;
        void *_field89;
        void *_field90;
        void *_field91;
        void *_field92;
        void *_field93;
        void *_field94;
        void *_field95;
        void *_field96;
        void *_field97;
        void *_field98;
        void *_field99;
        void *_field100;
        void *_field101;
        void *_field102;
        void *_field103;
        void *_field104;
        void *_field105;
        void *_field106;
        void *_field107;
        void *_field108;
        void *_field109;
        void *_field110;
        void *_field111;
        void *_field112;
        void *_field113;
        void *_field114;
        void *_field115;
        void *_field116;
        void *_field117;
        void *_field118;
        void *_field119;
        void *_field120;
        void *_field121;
        void *_field122;
        void *_field123;
        void *_field124;
        void *_field125;
        void *_field126;
        void *_field127;
        void *_field128;
        void *_field129;
        void *_field130;
        void *_field131;
        void *_field132;
        void *_field133;
        void *_field134;
        void *_field135;
        void *_field136;
        void *_field137;
        void *_field138;
        void *_field139;
        void *_field140;
        void *_field141;
        void *_field142;
        void *_field143;
        void *_field144;
        void *_field145;
        void *_field146;
        void *_field147;
        void *_field148;
        void *_field149;
        void *_field150;
        void *_field151;
        void *_field152;
        void *_field153;
        void *_field154;
        void *_field155;
        void *_field156;
        void *_field157;
        void *_field158;
        void *_field159;
        void *_field160;
        void *_field161;
        void *_field162;
        void *_field163;
        void *_field164;
        void *_field165;
        void *_field166;
        void *_field167;
        void *_field168;
        void *_field169;
        void *_field170;
        void *_field171;
        void *_field172;
        void *_field173;
        void *_field174;
        void *_field175;
        void *_field176;
        void *_field177;
        void *_field178;
        void *_field179;
        void *_field180;
        void *_field181;
        void *_field182;
        void *_field183;
        void *_field184;
        void *_field185;
        void *_field186;
        void *_field187;
        void *_field188;
        void *_field189;
        void *_field190;
        void *_field191;
        void *_field192;
        void *_field193;
        void *_field194;
        void *_field195;
        void *_field196;
        void *_field197;
        void *_field198;
        void *_field199;
        void *_field200;
        void *_field201;
        void *_field202;
        void *_field203;
        void *_field204;
        void *_field205;
        void *_field206;
        void *_field207;
        void *_field208;
        void *_field209;
        void *_field210;
        void *_field211;
        void *_field212;
        void *_field213;
        void *_field214;
        void *_field215;
        void *_field216;
        void *_field217;
        void *_field218;
        void *_field219;
        void *_field220;
        void *_field221;
        void *_field222;
        void *_field223;
        void *_field224;
        void *_field225;
        void *_field226;
        void *_field227;
        void *_field228;
        void *_field229;
        void *_field230;
        void *_field231;
        void *_field232;
        void *_field233;
        void *_field234;
        void *_field235;
        void *_field236;
        void *_field237;
        void *_field238;
        void *_field239;
        void *_field240;
        void *_field241;
        void *_field242;
        void *_field243;
        void *_field244;
        void *_field245;
        void *_field246;
        void *_field247;
        void *_field248;
        void *_field249;
        void *_field250;
        void *_field251;
        void *_field252;
        void *_field253;
        void *_field254;
        void *_field255;
        void *_field256;
        void *_field257;
        void *_field258;
        void *_field259;
        void *_field260;
        void *_field261;
        void *_field262;
        void *_field263;
        void *_field264;
        void *_field265;
        void *_field266;
        void *_field267;
        void *_field268;
        void *_field269;
        void *_field270;
        void *_field271;
        void *_field272;
        void *_field273;
        void *_field274;
        void *_field275;
        void *_field276;
        void *_field277;
        void *_field278;
        void *_field279;
        void *_field280;
        void *_field281;
        void *_field282;
        void *_field283;
        void *_field284;
        void *_field285;
        void *_field286;
        void *_field287;
        void *_field288;
        void *_field289;
        void *_field290;
        void *_field291;
        void *_field292;
        void *_field293;
        void *_field294;
        void *_field295;
        void *_field296;
        void *_field297;
        void *_field298;
        void *_field299;
        void *_field300;
        void *_field301;
        void *_field302;
        void *_field303;
        void *_field304;
        void *_field305;
        void *_field306;
        void *_field307;
        void *_field308;
        void *_field309;
        void *_field310;
        void *_field311;
        void *_field312;
        void *_field313;
        void *_field314;
        void *_field315;
        void *_field316;
        void *_field317;
        void *_field318;
        void *_field319;
        void *_field320;
        void *_field321;
        void *_field322;
        void *_field323;
        void *_field324;
        void *_field325;
        void *_field326;
        void *_field327;
        void *_field328;
        void *_field329;
        void *_field330;
        void *_field331;
        void *_field332;
        void *_field333;
        void *_field334;
        void *_field335;
        void *_field336;
        void *_field337;
        void *_field338;
        void *_field339;
        void *_field340;
        void *_field341;
        void *_field342;
        void *_field343;
        void *_field344;
        void *_field345;
        void *_field346;
        void *_field347;
        void *_field348;
        void *_field349;
        void *_field350;
        void *_field351;
        void *_field352;
        void *_field353;
        void *_field354;
        void *_field355;
        void *_field356;
        void *_field357;
        void *_field358;
        void *_field359;
        void *_field360;
        void *_field361;
        void *_field362;
        void *_field363;
        void *_field364;
        void *_field365;
        void *_field366;
        void *_field367;
        void *_field368;
        void *_field369;
        void *_field370;
        void *_field371;
        void *_field372;
        void *_field373;
        void *_field374;
        void *_field375;
        void *_field376;
        void *_field377;
        void *_field378;
        void *_field379;
        void *_field380;
        void *_field381;
        void *_field382;
        void *_field383;
        void *_field384;
        void *_field385;
        void *_field386;
        void *_field387;
        void *_field388;
        void *_field389;
        void *_field390;
        void *_field391;
        void *_field392;
        void *_field393;
        void *_field394;
        void *_field395;
        void *_field396;
        void *_field397;
        void *_field398;
        void *_field399;
        void *_field400;
        void *_field401;
        void *_field402;
        void *_field403;
        void *_field404;
        void *_field405;
        void *_field406;
        void *_field407;
        void *_field408;
        void *_field409;
        void *_field410;
        void *_field411;
        void *_field412;
        void *_field413;
        void *_field414;
        void *_field415;
        void *_field416;
        void *_field417;
        void *_field418;
        void *_field419;
        void *_field420;
        void *_field421;
        void *_field422;
        void *_field423;
        void *_field424;
        void *_field425;
        void *_field426;
        void *_field427;
        void *_field428;
        void *_field429;
        void *_field430;
        void *_field431;
        void *_field432;
        void *_field433;
        void *_field434;
        void *_field435;
        void *_field436;
        void *_field437;
        void *_field438;
        void *_field439;
        void *_field440;
        void *_field441;
        void *_field442;
        void *_field443;
        void *_field444;
        void *_field445;
        void *_field446;
        void *_field447;
        void *_field448;
        void *_field449;
        void *_field450;
        void *_field451;
        void *_field452;
        void *_field453;
        void *_field454;
        void *_field455;
        void *_field456;
        void *_field457;
        void *_field458;
        void *_field459;
        void *_field460;
        void *_field461;
        void *_field462;
        void *_field463;
        void *_field464;
        void *_field465;
        void *_field466;
        void *_field467;
        void *_field468;
        void *_field469;
        void *_field470;
        void *_field471;
        void *_field472;
        void *_field473;
        void *_field474;
        void *_field475;
        void *_field476;
        void *_field477;
        void *_field478;
        void *_field479;
        void *_field480;
        void *_field481;
        void *_field482;
        void *_field483;
        void *_field484;
        void *_field485;
        void *_field486;
        void *_field487;
        void *_field488;
        void *_field489;
        void *_field490;
        void *_field491;
        void *_field492;
        void *_field493;
        void *_field494;
        void *_field495;
        void *_field496;
        void *_field497;
        void *_field498;
        void *_field499;
        void *_field500;
        void *_field501;
        void *_field502;
        void *_field503;
        void *_field504;
        void *_field505;
        void *_field506;
        void *_field507;
        void *_field508;
        void *_field509;
        void *_field510;
        void *_field511;
        void *_field512;
        void *_field513;
        void *_field514;
        void *_field515;
        void *_field516;
        void *_field517;
        void *_field518;
        void *_field519;
        void *_field520;
        void *_field521;
        void *_field522;
        void *_field523;
        void *_field524;
        void *_field525;
        void *_field526;
        void *_field527;
        void *_field528;
        void *_field529;
        void *_field530;
        void *_field531;
        void *_field532;
        void *_field533;
        void *_field534;
        void *_field535;
        void *_field536;
        void *_field537;
        void *_field538;
        void *_field539;
        void *_field540;
        void *_field541;
        void *_field542;
        void *_field543;
        void *_field544;
        void *_field545;
        void *_field546;
        void *_field547;
        void *_field548;
        void *_field549;
        void *_field550;
        void *_field551;
        void *_field552;
        void *_field553;
        void *_field554;
        void *_field555;
        void *_field556;
        void *_field557;
        void *_field558;
        void *_field559;
        void *_field560;
        void *_field561;
        void *_field562;
        void *_field563;
        void *_field564;
        void *_field565;
        void *_field566;
        void *_field567;
        void *_field568;
        void *_field569;
        void *_field570;
        void *_field571;
        void *_field572;
        void *_field573;
        void *_field574;
        void *_field575;
        void *_field576;
        void *_field577;
        void *_field578;
        void *_field579;
        void *_field580;
        void *_field581;
        void *_field582;
        void *_field583;
        void *_field584;
        void *_field585;
        void *_field586;
        void *_field587;
        void *_field588;
        void *_field589;
        void *_field590;
        void *_field591;
        void *_field592;
        void *_field593;
        void *_field594;
        void *_field595;
        void *_field596;
        void *_field597;
        void *_field598;
        void *_field599;
        void *_field600;
        void *_field601;
        void *_field602;
        void *_field603;
        void *_field604;
        void *_field605;
        void *_field606;
        void *_field607;
        void *_field608;
        void *_field609;
        void *_field610;
        void *_field611;
        void *_field612;
        void *_field613;
        void *_field614;
        void *_field615;
        void *_field616;
        void *_field617;
        void *_field618;
        void *_field619;
        void *_field620;
        void *_field621;
        void *_field622;
        void *_field623;
        void *_field624;
        void *_field625;
        void *_field626;
        void *_field627;
        void *_field628;
        void *_field629;
        void *_field630;
        void *_field631;
        void *_field632;
        void *_field633;
        void *_field634;
        void *_field635;
        void *_field636;
        void *_field637;
        void *_field638;
        void *_field639;
        void *_field640;
        void *_field641;
        void *_field642;
        void *_field643;
        void *_field644;
        void *_field645;
        void *_field646;
        void *_field647;
        void *_field648;
        void *_field649;
        void *_field650;
        void *_field651;
        void *_field652;
        void *_field653;
        void *_field654;
        void *_field655;
        void *_field656;
        void *_field657;
        void *_field658;
        void *_field659;
        void *_field660;
        void *_field661;
        void *_field662;
        void *_field663;
        void *_field664;
        void *_field665;
        void *_field666;
        void *_field667;
        void *_field668;
        void *_field669;
        void *_field670;
        void *_field671;
        void *_field672;
        void *_field673;
        void *_field674;
        void *_field675;
        void *_field676;
        void *_field677;
        void *_field678;
        void *_field679;
        void *_field680;
        void *_field681;
        void *_field682;
        void *_field683;
        void *_field684;
        void *_field685;
        void *_field686;
        void *_field687;
        void *_field688;
        void *_field689;
        void *_field690;
        void *_field691;
        void *_field692;
        void *_field693;
        void *_field694;
        void *_field695;
        void *_field696;
        void *_field697;
        void *_field698;
        void *_field699;
        void *_field700;
        void *_field701;
        void *_field702;
        void *_field703;
        void *_field704;
        void *_field705;
        void *_field706;
        void *_field707;
        void *_field708;
        void *_field709;
        void *_field710;
        void *_field711;
        void *_field712;
        void *_field713;
        void *_field714;
        void *_field715;
        void *_field716;
        void *_field717;
        void *_field718;
        void *_field719;
        void *_field720;
        void *_field721;
        void *_field722;
        void *_field723;
        void *_field724;
        void *_field725;
        void *_field726;
        void *_field727;
        void *_field728;
        void *_field729;
        void *_field730;
        void *_field731;
        void *_field732;
        void *_field733;
        void *_field734;
        void *_field735;
        void *_field736;
        void *_field737;
        void *_field738;
        void *_field739;
        void *_field740;
        void *_field741;
        void *_field742;
        void *_field743;
        void *_field744;
        void *_field745;
        void *_field746;
        void *_field747;
        void *_field748;
        void *_field749;
        void *_field750;
        void *_field751;
        void *_field752;
        void *_field753;
        void *_field754;
        void *_field755;
        void *_field756;
        void *_field757;
        void *_field758;
        void *_field759;
        void *_field760;
        void *_field761;
        void *_field762;
        void *_field763;
        void *_field764;
        void *_field765;
        void *_field766;
        void *_field767;
        void *_field768;
        void *_field769;
        void *_field770;
        void *_field771;
        void *_field772;
        void *_field773;
        void *_field774;
        void *_field775;
        void *_field776;
        void *_field777;
        void *_field778;
        void *_field779;
        void *_field780;
        void *_field781;
        void *_field782;
        void *_field783;
        void *_field784;
        void *_field785;
        void *_field786;
        void *_field787;
        void *_field788;
        void *_field789;
        void *_field790;
        void *_field791;
        void *_field792;
        void *_field793;
        void *_field794;
        void *_field795;
        void *_field796;
        void *_field797;
        void *_field798;
        void *_field799;
        void *_field800;
        void *_field801;
        void *_field802;
        void *_field803;
        void *_field804;
        void *_field805;
        void *_field806;
        void *_field807;
        void *_field808;
        void *_field809;
        void *_field810;
        void *_field811;
        void *_field812;
        void *_field813;
        void *_field814;
        void *_field815;
        void *_field816;
        void *_field817;
        void *_field818;
        void *_field819;
        void *_field820;
        void *_field821;
        void *_field822;
        void *_field823;
        void *_field824;
        void *_field825;
        void *_field826;
        void *_field827;
        void *_field828;
        void *_field829;
        void *_field830;
        void *_field831;
        void *_field832;
        void *_field833;
        void *_field834;
        void *_field835;
        void *_field836;
        void *_field837;
        void *_field838;
        void *_field839;
        void *_field840;
        void *_field841;
        void *_field842;
        void *_field843;
        void *_field844;
        void *_field845;
        void *_field846;
        void *_field847;
        void *_field848;
        void *_field849;
        void *_field850;
        void *_field851;
        void *_field852;
        void *_field853;
        void *_field854;
        void *_field855;
        void *_field856;
        void *_field857;
        void *_field858;
        void *_field859;
        void *_field860;
        void *_field861;
        void *_field862;
        void *_field863;
        void *_field864;
        void *_field865;
        void *_field866;
        void *_field867;
        void *_field868;
        void *_field869;
        void *_field870;
        void *_field871;
        void *_field872;
        void *_field873;
        void *_field874;
        void *_field875;
        void *_field876;
        void *_field877;
        void *_field878;
        void *_field879;
        void *_field880;
        void *_field881;
        void *_field882;
        void *_field883;
        void *_field884;
        void *_field885;
        void *_field886;
        void *_field887;
        void *_field888;
        void *_field889;
        void *_field890;
        void *_field891;
        void *_field892;
        void *_field893;
        void *_field894;
        void *_field895;
        void *_field896;
        void *_field897;
        void *_field898;
        void *_field899;
        void *_field900;
        void *_field901;
        void *_field902;
        void *_field903;
        void *_field904;
        void *_field905;
        void *_field906;
        void *_field907;
        void *_field908;
        void *_field909;
        void *_field910;
        void *_field911;
        void *_field912;
        void *_field913;
        void *_field914;
        void *_field915;
        void *_field916;
        void *_field917;
        void *_field918;
        void *_field919;
        void *_field920;
        void *_field921;
        void *_field922;
        void *_field923;
        void *_field924;
        void *_field925;
        void *_field926;
        void *_field927;
        void *_field928;
        void *_field929;
        void *_field930;
        void *_field931;
        void *_field932;
        void *_field933;
        void *_field934;
        void *_field935;
        void *_field936;
        void *_field937;
        void *_field938;
        void *_field939;
        void *_field940;
        void *_field941;
        void *_field942;
        void *_field943;
        void *_field944;
        void *_field945;
        void *_field946;
        void *_field947;
        void *_field948;
        void *_field949;
        void *_field950;
        void *_field951;
        void *_field952;
        void *_field953;
        void *_field954;
        void *_field955;
        void *_field956;
        void *_field957;
        void *_field958;
        void *_field959;
        void *_field960;
        void *_field961;
        void *_field962;
        void *_field963;
        void *_field964;
        void *_field965;
        void *_field966;
        void *_field967;
        void *_field968;
        void *_field969;
        void *_field970;
        void *_field971;
        void *_field972;
        void *_field973;
        void *_field974;
    } _field2;
    struct _CGLPrivateObject *_field3;
    void *_field4;
};

struct _CGLPrivateObject;

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct __C3DAnimation {
    struct __C3DEntity _field1;
    double _field2;
    float _field3;
    struct __C3DTimingFunction *_field4;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :2;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    double _field5;
    double _field6;
    double _field7;
    float _field8;
    float _field9;
    float _field10;
    void *_field11;
    void *_field12;
    void *_field13;
    void *_field14;
    struct __C3DAnimationEvents *_field15;
    CDStruct_2921ca3b _field16;
};

struct __C3DAnimationChannel {
    struct __CFRuntimeBase _field1;
    struct __C3DAnimation *_field2;
    struct __CFArray *_field3;
    void *_field4;
    struct __C3DModelTarget *_field5;
    struct __CFString *_field6;
};

struct __C3DAnimationManager {
    struct __CFRuntimeBase _field1;
    struct __C3DModelValueStorage *_field2;
    struct __CFDictionary *_field3;
    struct __CFDictionary *_field4;
    struct __CFSet *_field5;
    struct __CFArray *_field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    struct _C3DAnimationPendingEvent *_field10;
    struct __C3DAllocator *_field11;
    struct __CFDictionary *_field12;
    struct __CFArray *_field13;
    double _field14;
    double _field15;
    struct _opaque_pthread_mutex_t _field16;
    int _field17;
    int _field18;
    int _field19;
    int _field20;
};

struct __C3DConstraint {
    struct __C3DEntity _field1;
    struct __CFString *_field2;
    CDStruct_2921ca3b _field3;
    double _field4;
    _Bool _field5;
};

struct __C3DEffectCommonProfile {
    struct __C3DEffectProfile {
        struct __CFRuntimeBase _field1;
        int _field2;
    } _field1;
    struct __C3DMaterial *_field2;
    int _field3;
    struct __C3DEffectSlot *_field4;
    struct __C3DEffectSlot *_field5;
    struct __C3DEffectSlot *_field6;
    struct __C3DEffectSlot *_field7;
    struct __C3DEffectSlot *_field8;
    struct __C3DEffectSlot *_field9;
    struct __C3DEffectSlot *_field10;
    struct __C3DEffectSlot *_field11;
    float _field12;
    float _field13;
    float _field14;
    float _field15;
    float _field16;
    char _field17;
    long long _field18;
    _Bool _field19;
    _Bool _field20;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :10;
    struct __C3DFXProgram *_field21;
};

struct __C3DEffectSlot {
    struct __CFRuntimeBase _field1;
    struct C3DColor4 _field2;
    struct __C3DImage *_field3;
    struct __C3DTextureSampler *_field4;
    struct __C3DTexture *_field5;
    struct __C3DImageProxy *_field6;
    struct __C3DTransforms *_field7;
    int _field8;
    float _field9;
    int _field10;
    void *_field11;
};

struct __C3DEntity {
    struct __CFRuntimeBase _field1;
    void *_field2;
    struct __CFString *_field3;
    struct __CFString *_field4;
    struct __CFDictionary *_field5;
    long long _field6;
    long long _field7;
};

struct __C3DFloor {
    struct __C3DGeometry _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    int _field6;
    float _field7;
};

struct __C3DFramebuffer;

struct __C3DGenericSource {
    struct __C3DEntity _field1;
    struct __C3DSourceAccessor *_field2;
    union {
        struct __CFData *_field1;
        void *_field2;
    } _field3;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct __C3DGeometry {
    struct __C3DEntity _field1;
    struct __C3DMesh *_field2;
    struct __C3DMaterial *_field3;
    struct __CFArray *_field4;
    struct __CFArray *_field5;
    struct __CFSet *_field6;
    struct __CFArray *_field7;
    struct __C3DAABB *_field8;
    void *_field9;
    struct {
        _Bool _field1;
        _Bool _field2;
        unsigned short _field3;
        unsigned short _field4;
        float _field5;
        float _field6;
        unsigned char _field7;
        unsigned char _field8;
        unsigned char _field9;
        unsigned char _field10;
        struct __C3DMeshElement *_field11;
        struct __C3DMeshSource *_field12;
        struct __C3DMesh *_field13;
        _Bool _field14;
        _Bool _field15;
        void *_field16;
        void *_field17;
    } _field10;
};

struct __C3DKeyframedAnimation {
    struct __C3DAnimation _field1;
    struct __C3DKeyframeController *_field2;
};

struct __C3DLight {
    struct __C3DEntity _field1;
    struct C3DColor4 _field2;
    int _field3;
    float _field4[6];
    struct C3DColor4 _field5;
    union C3DVector2 _field6;
    float _field7;
    float _field8;
    unsigned int _field9;
    unsigned long long _field10;
    _Bool _field11;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    double _field12;
    double _field13;
    double _field14;
    struct __C3DEffectSlot *_field15;
    struct __C3DFXTechnique *_field16;
};

struct __C3DMaterial;

struct __C3DMesh;

struct __C3DMeshSource {
    struct __C3DGenericSource _field1;
    unsigned short _field2;
    unsigned short _field3;
};

struct __C3DMorph {
    struct __C3DEntity _field1;
    int _field2;
    struct __CFArray *_field3;
    struct __C3DGenericSource *_field4;
    unsigned int _field5;
    _Bool _field6;
};

struct __C3DParametricGeometry {
    struct __C3DGeometry _field1;
    struct {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
        float _field5;
        float _field6;
        float _field7;
        float _field8;
        float _field9;
        float _field10;
        float _field11;
        float _field12;
        int _field13;
        int _field14;
        int _field15;
        int _field16;
        int _field17;
        int _field18;
        int _field19;
        int _field20;
        int _field21;
        int _field22;
        int _field23;
        unsigned int _field24;
    } _field2;
    struct {
        void *_field1;
        void *_field2;
        void *_field3;
        void *_field4;
        void *_field5;
        void *_field6;
    } _field3;
    struct __CFData *_field4;
};

struct __C3DQuaternion {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct __C3DResourceManager {
    struct __CFRuntimeBase _field1;
    struct __CFDictionary *_field2;
    struct __CFDictionary *_field3;
    struct __CFDictionary *_field4;
    struct __CFDictionary *_field5;
    struct __CFDictionary *_field6;
    struct __CFDictionary *_field7;
    struct __CFDictionary *_field8;
    unsigned int _field9;
    unsigned int _field10;
    struct __C3DList *_field11;
    _Bool _field12;
    struct __C3DMeshPacker *_field13;
    struct __C3DTexturePacker *_field14;
    _Bool _field15;
    struct _opaque_pthread_mutex_t _field16;
    struct _opaque_pthread_mutex_t _field17;
    id _field18;
    struct __CFDictionary *_field19;
    struct __CFArray *_field20;
};

struct __C3DShapeGeometry {
    struct __C3DGeometry _field1;
    struct {
        char _field1;
        float _field2;
        float _field3;
        float _field4;
        int _field5;
        float _field6;
        struct CGPath *_field7;
        void *_field8;
        struct CGPath *_field9;
        void *_field10;
    } _field2;
    struct __C3DMesh *_field3;
    unsigned char _field4[16];
};

struct __C3DTextGeometry {
    struct __C3DShapeGeometry _field1;
    struct {
        struct __CTFrame *_field1;
        void *_field2;
        void *_field3;
        int _field4;
        int _field5;
        _Bool _field6;
        _Bool _field7;
        _Bool _field8;
        struct CGRect _field9;
    } _field2;
};

struct __C3DTextureSampler {
    struct __CFRuntimeBase _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    struct C3DColor4 _field8;
    float _field9;
    unsigned char _field10;
    int _field11;
    unsigned long long _field12;
};

struct __C3DValue {
    struct __CFRuntimeBase _field1;
    short _field2;
    short _field3;
    char *_field4;
    long long _field5;
};

struct __CFArray;

struct __CFData;

struct __CFDictionary;

struct __CFRuntimeBase {
    unsigned long long _field1;
    unsigned char _field2[4];
    unsigned int _field3;
};

struct __CFSet;

struct __CFString;

struct __list_node<SCNCAction *, void *>;

struct _opaque_pthread_mutex_t {
    long long _field1;
    char _field2[56];
};

struct btActionInterface;

struct btAlignedAllocator<btActionInterface *, 16>;

struct btAlignedAllocator<btCollisionObject *, 16>;

struct btAlignedAllocator<btPersistentManifold *, 16>;

struct btAlignedAllocator<btRigidBody *, 16>;

struct btAlignedAllocator<btTypedConstraint *, 16>;

struct btAlignedAllocator<btVector3, 16>;

struct btAlignedAllocator<btWheelInfo, 16>;

struct btAlignedAllocator<float, 16>;

struct btAlignedObjectArray<btActionInterface *> {
    struct btAlignedAllocator<btActionInterface *, 16> _field1;
    int _field2;
    int _field3;
    struct btActionInterface **_field4;
    _Bool _field5;
};

struct btAlignedObjectArray<btCollisionObject *> {
    struct btAlignedAllocator<btCollisionObject *, 16> _field1;
    int _field2;
    int _field3;
    struct btCollisionObject **_field4;
    _Bool _field5;
};

struct btAlignedObjectArray<btPersistentManifold *> {
    struct btAlignedAllocator<btPersistentManifold *, 16> _field1;
    int _field2;
    int _field3;
    struct btPersistentManifold **_field4;
    _Bool _field5;
};

struct btAlignedObjectArray<btRigidBody *> {
    struct btAlignedAllocator<btRigidBody *, 16> _field1;
    int _field2;
    int _field3;
    struct btRigidBody **_field4;
    _Bool _field5;
};

struct btAlignedObjectArray<btTypedConstraint *> {
    struct btAlignedAllocator<btTypedConstraint *, 16> _field1;
    int _field2;
    int _field3;
    struct btTypedConstraint **_field4;
    _Bool _field5;
};

struct btAlignedObjectArray<btVector3> {
    struct btAlignedAllocator<btVector3, 16> _field1;
    int _field2;
    int _field3;
    struct btVector3 *_field4;
    _Bool _field5;
};

struct btAlignedObjectArray<btWheelInfo> {
    struct btAlignedAllocator<btWheelInfo, 16> _field1;
    int _field2;
    int _field3;
    struct btWheelInfo *_field4;
    _Bool _field5;
};

struct btAlignedObjectArray<float> {
    struct btAlignedAllocator<float, 16> _field1;
    int _field2;
    int _field3;
    float *_field4;
    _Bool _field5;
};

struct btAngularLimit {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
    float _field7;
    _Bool _field8;
};

struct btBroadphaseInterface;

struct btBroadphaseProxy;

struct btC3DDebugDraw {
    void **_field1;
    int _field2;
    void *_field3;
};

struct btCapsuleShape {
    void **_field1;
    int _field2;
    void *_field3;
    struct btVector3 _field4;
    struct btVector3 _field5;
    float _field6;
    float _field7;
    int _field8;
};

struct btCharacterControllerInterface {
    void **_field1;
};

struct btCollisionObject;

struct btCollisionShape {
    void **_field1;
    int _field2;
    void *_field3;
};

struct btConstraintSetting {
    float _field1;
    float _field2;
    float _field3;
};

struct btConstraintSolver;

struct btContactSolverInfo {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    int _field6;
    float _field7;
    float _field8;
    float _field9;
    float _field10;
    float _field11;
    int _field12;
    float _field13;
    float _field14;
    float _field15;
    float _field16;
    int _field17;
    int _field18;
    int _field19;
    float _field20;
    float _field21;
};

struct btDiscreteDynamicsWorld {
    void **_field1;
    struct btAlignedObjectArray<btCollisionObject *> _field2;
    struct btDispatcher *_field3;
    struct btDispatcherInfo _field4;
    struct btBroadphaseInterface *_field5;
    struct btIDebugDraw *_field6;
    _Bool _field7;
    void *_field8;
    void *_field9;
    void *_field10;
    struct btContactSolverInfo _field11;
    float _field12;
    struct btAlignedObjectArray<btTypedConstraint *> _field13;
    struct InplaceSolverIslandCallback *_field14;
    struct btConstraintSolver *_field15;
    struct btSimulationIslandManager *_field16;
    struct btAlignedObjectArray<btTypedConstraint *> _field17;
    struct btAlignedObjectArray<btRigidBody *> _field18;
    struct btVector3 _field19;
    float _field20;
    _Bool _field21;
    _Bool _field22;
    _Bool _field23;
    _Bool _field24;
    struct btAlignedObjectArray<btActionInterface *> _field25;
    int _field26;
    struct btAlignedObjectArray<btPersistentManifold *> _field27;
    _Bool _field28;
};

struct btDispatcher;

struct btDispatcherInfo {
    float _field1;
    int _field2;
    int _field3;
    float _field4;
    _Bool _field5;
    struct btIDebugDraw *_field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    float _field10;
    _Bool _field11;
    float _field12;
};

struct btDynamicsWorld {
    void **_field1;
    struct btAlignedObjectArray<btCollisionObject *> _field2;
    struct btDispatcher *_field3;
    struct btDispatcherInfo _field4;
    struct btBroadphaseInterface *_field5;
    struct btIDebugDraw *_field6;
    _Bool _field7;
    void *_field8;
    void *_field9;
    void *_field10;
    struct btContactSolverInfo _field11;
    float _field12;
};

struct btHashedOverlappingPairCache;

struct btHingeConstraint {
    void **_field1;
    int _field2;
    int _field3;
    CDUnion_15924c16 _field4;
    float _field5;
    _Bool _field6;
    _Bool _field7;
    int _field8;
    struct btRigidBody *_field9;
    struct btRigidBody *_field10;
    float _field11;
    float _field12;
    struct btJointFeedback *_field13;
    struct btJacobianEntry _field14[3];
    struct btJacobianEntry _field15[3];
    struct btTransform _field16;
    struct btTransform _field17;
    float _field18;
    float _field19;
    struct btAngularLimit _field20;
    float _field21;
    float _field22;
    float _field23;
    float _field24;
    _Bool _field25;
    _Bool _field26;
    _Bool _field27;
    _Bool _field28;
    _Bool _field29;
    float _field30;
    int _field31;
    float _field32;
    float _field33;
    float _field34;
};

struct btIDebugDraw;

struct btJacobianEntry {
    struct btVector3 _field1;
    struct btVector3 _field2;
    struct btVector3 _field3;
    struct btVector3 _field4;
    struct btVector3 _field5;
    float _field6;
};

struct btJointFeedback;

struct btManifoldPoint {
    struct btVector3 _field1;
    struct btVector3 _field2;
    struct btVector3 _field3;
    struct btVector3 _field4;
    struct btVector3 _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9;
    int _field10;
    int _field11;
    int _field12;
    int _field13;
    void *_field14;
    _Bool _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
    float _field20;
    float _field21;
    float _field22;
    int _field23;
    struct btVector3 _field24;
    struct btVector3 _field25;
};

struct btMatrix3x3 {
    struct btVector3 _field1[3];
};

struct btMotionState;

struct btOverlapFilterCallback {
    void **_field1;
};

struct btOverlappingPairCallback {
    void **_field1;
};

struct btPairCachingGhostObject {
    void **_field1;
    struct btTransform _field2;
    struct btTransform _field3;
    struct btVector3 _field4;
    struct btVector3 _field5;
    struct btVector3 _field6;
    int _field7;
    float _field8;
    struct btBroadphaseProxy *_field9;
    struct btCollisionShape *_field10;
    void *_field11;
    struct btCollisionShape *_field12;
    int _field13;
    int _field14;
    int _field15;
    int _field16;
    float _field17;
    float _field18;
    float _field19;
    float _field20;
    int _field21;
    void *_field22;
    float _field23;
    float _field24;
    float _field25;
    int _field26;
    struct btAlignedObjectArray<btCollisionObject *> _field27;
    struct btHashedOverlappingPairCache *_field28;
};

struct btPersistentManifold {
    int _field1;
    struct btManifoldPoint _field2[4];
    struct btCollisionObject *_field3;
    struct btCollisionObject *_field4;
    int _field5;
    float _field6;
    float _field7;
    int _field8;
    int _field9;
    int _field10;
    struct c3dContactCallback *_field11;
};

struct btPoint2PointConstraint {
    void **_field1;
    int _field2;
    int _field3;
    CDUnion_15924c16 _field4;
    float _field5;
    _Bool _field6;
    _Bool _field7;
    int _field8;
    struct btRigidBody *_field9;
    struct btRigidBody *_field10;
    float _field11;
    float _field12;
    struct btJointFeedback *_field13;
    struct btJacobianEntry _field14[3];
    struct btVector3 _field15;
    struct btVector3 _field16;
    int _field17;
    float _field18;
    float _field19;
    _Bool _field20;
    struct btConstraintSetting _field21;
};

struct btRaycastVehicle {
    void **_field1;
    struct btAlignedObjectArray<btVector3> _field2;
    struct btAlignedObjectArray<btVector3> _field3;
    struct btAlignedObjectArray<float> _field4;
    struct btAlignedObjectArray<float> _field5;
    int _field6;
    int _field7;
    float _field8;
    float _field9;
    struct btVehicleRaycaster *_field10;
    float _field11;
    float _field12;
    float _field13;
    struct btRigidBody *_field14;
    int _field15;
    int _field16;
    int _field17;
    struct btAlignedObjectArray<btWheelInfo> _field18;
};

struct btRigidBody {
    void **_field1;
    struct btTransform _field2;
    struct btTransform _field3;
    struct btVector3 _field4;
    struct btVector3 _field5;
    struct btVector3 _field6;
    int _field7;
    float _field8;
    struct btBroadphaseProxy *_field9;
    struct btCollisionShape *_field10;
    void *_field11;
    struct btCollisionShape *_field12;
    int _field13;
    int _field14;
    int _field15;
    int _field16;
    float _field17;
    float _field18;
    float _field19;
    float _field20;
    int _field21;
    void *_field22;
    float _field23;
    float _field24;
    float _field25;
    int _field26;
    struct btMatrix3x3 _field27;
    struct btVector3 _field28;
    struct btVector3 _field29;
    float _field30;
    struct btVector3 _field31;
    struct btVector3 _field32;
    struct btVector3 _field33;
    struct btVector3 _field34;
    struct btVector3 _field35;
    struct btVector3 _field36;
    float _field37;
    float _field38;
    _Bool _field39;
    float _field40;
    float _field41;
    float _field42;
    float _field43;
    float _field44;
    float _field45;
    struct btMotionState *_field46;
    struct btAlignedObjectArray<btTypedConstraint *> _field47;
    int _field48;
    int _field49;
    struct btVector3 _field50;
    struct btVector3 _field51;
    struct btVector3 _field52;
    struct btVector3 _field53;
    struct btVector3 _field54;
    struct btVector3 _field55;
    int _field56;
    int _field57;
};

struct btSimulationIslandManager;

struct btSliderConstraint {
    void **_field1;
    int _field2;
    int _field3;
    CDUnion_15924c16 _field4;
    float _field5;
    _Bool _field6;
    _Bool _field7;
    int _field8;
    struct btRigidBody *_field9;
    struct btRigidBody *_field10;
    float _field11;
    float _field12;
    struct btJointFeedback *_field13;
    _Bool _field14;
    _Bool _field15;
    struct btTransform _field16;
    struct btTransform _field17;
    _Bool _field18;
    float _field19;
    float _field20;
    float _field21;
    float _field22;
    float _field23;
    float _field24;
    float _field25;
    float _field26;
    float _field27;
    float _field28;
    float _field29;
    float _field30;
    float _field31;
    float _field32;
    float _field33;
    float _field34;
    float _field35;
    float _field36;
    float _field37;
    float _field38;
    float _field39;
    float _field40;
    float _field41;
    float _field42;
    float _field43;
    float _field44;
    float _field45;
    float _field46;
    _Bool _field47;
    _Bool _field48;
    int _field49;
    struct btJacobianEntry _field50[3];
    float _field51[3];
    struct btJacobianEntry _field52[3];
    float _field53;
    struct btTransform _field54;
    struct btTransform _field55;
    struct btVector3 _field56;
    struct btVector3 _field57;
    struct btVector3 _field58;
    struct btVector3 _field59;
    struct btVector3 _field60;
    struct btVector3 _field61;
    struct btVector3 _field62;
    struct btVector3 _field63;
    float _field64;
    float _field65;
    float _field66;
    float _field67;
    _Bool _field68;
    float _field69;
    float _field70;
    float _field71;
    _Bool _field72;
    float _field73;
    float _field74;
    float _field75;
};

struct btTransform {
    struct btMatrix3x3 _field1;
    struct btVector3 _field2;
};

struct btTypedConstraint;

struct btVector3 {
    union {
        float _field1[4];
    } _field1;
};

struct btVehicleRaycaster {
    void **_field1;
};

struct btWheelInfo;

struct c3dAether {
    struct vector<c3dPhysicsField *, std::__1::allocator<c3dPhysicsField *>> _fields;
};

struct c3dContactCallback;

struct c3dPhysicsField;

struct list<SCNCAction *, std::__1::allocator<SCNCAction *>> {
    struct __list_node_base<SCNCAction *, void *> {
        struct __list_node<SCNCAction *, void *> *_field1;
        struct __list_node<SCNCAction *, void *> *_field2;
    } _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<SCNCAction *, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct vector<SCNCAction *, std::__1::allocator<SCNCAction *>> {
    struct SCNCAction **_field1;
    struct SCNCAction **_field2;
    struct __compressed_pair<SCNCAction **, std::__1::allocator<SCNCAction *>> {
        struct SCNCAction **_field1;
    } _field3;
};

struct vector<c3dPhysicsField *, std::__1::allocator<c3dPhysicsField *>> {
    struct c3dPhysicsField **__begin_;
    struct c3dPhysicsField **__end_;
    struct __compressed_pair<c3dPhysicsField **, std::__1::allocator<c3dPhysicsField *>> {
        struct c3dPhysicsField **__first_;
    } __end_cap_;
};

#pragma mark Typedef'd Structures

typedef struct {
    void *_field1;
    void *_field2;
} CDStruct_2921ca3b;

typedef struct {
    char _field1;
    double _field2;
    double _field3;
    int _field4;
    double _field5;
    void *_field6;
    void *_field7;
} CDStruct_d3ce6806;

typedef struct {
    float _field1;
    float _field2;
} CDStruct_b2fbf00d;

typedef struct {
    long long _field1;
    int _field2;
    unsigned int _field3;
    long long _field4;
} CDStruct_198678f7;

typedef struct {
    id _field1;
    struct CGPoint _field2;
    struct CGPoint _field3;
    struct SCNVector3 _field4;
    struct SCNVector3 _field5;
    double _field6;
} CDStruct_811921b8;

typedef struct {
    unsigned int _field1;
    int _field2;
    long long _field3;
    unsigned long long _field4;
    double _field5;
    long long _field6;
    struct CVSMPTETime _field7;
    unsigned long long _field8;
    unsigned long long _field9;
} CDStruct_e50ab651;

typedef struct {
    struct __C3DFXGLSLProgram *weakProgram;
    struct {
        unsigned int vbo;
        unsigned int ibo;
        unsigned int baseIndex;
        unsigned int baseVertex;
        unsigned int vertexSize;
        unsigned int allocatedVerticesSize;
        unsigned int allocatedIndicesSize;
    } dynamicVBOInfo;
    unsigned int textureID;
    unsigned int vao;
    unsigned int drawMode;
    _Bool orthographic;
    _Bool clearDepthBuffer;
    _Bool enableDepthTest;
    _Bool enableCulling;
    _Bool isDynamic;
} CDStruct_cec9a5d8;

typedef struct {
    struct {
        unsigned int textureID;
        struct CGSize textureSize;
        _Bool isRetina;
    } textureInfo;
    double lineHeight;
    short characterWidth_texture;
    double characterWidth_typography;
    short characterHeight_texture;
    struct *symbolRects;
} CDStruct_a02c98f3;

typedef struct {
    CDStruct_d3ce6806 _field1;
    void *_field2;
    void *_field3;
    int _field4;
    int _field5;
    _Bool _field6;
    _Bool _field7;
    struct CGRect _field8;
    double _field9;
} CDStruct_8bd95810;

#pragma mark Named Unions

union C3DVector2 {
    float _field1[2];
    CDStruct_b2fbf00d _field2;
    CDStruct_b2fbf00d _field3;
    CDStruct_b2fbf00d _field4;
};

#pragma mark Typedef'd Unions

typedef union {
    int _field1;
    void *_field2;
} CDUnion_15924c16;

